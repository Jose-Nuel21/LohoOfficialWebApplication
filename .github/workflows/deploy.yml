name: Deploy Laravel to Shared Hosting

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Clean target directory
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ${{ secrets.DEPLOY_PATH }}
            find . -maxdepth 1 -not -name '.' -not -name '..' -not -name '.htaccess' -not -name '.env' -exec rm -rf {} +
          EOF

      - name: Deploy with SCP
        run: |
          scp -P ${{ secrets.SSH_PORT }} -r -o StrictHostKeyChecking=no ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_PATH }}

      - name: Post-deployment tasks
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ${{ secrets.DEPLOY_PATH }}
            cp .env.example .env
            sed -i "s|DB_HOST=.*|DB_HOST=${{ secrets.DB_HOST }}|" .env
            sed -i "s|DB_DATABASE=.*|DB_DATABASE=${{ secrets.DB_NAME }}|" .env
            sed -i "s|DB_USERNAME=.*|DB_USERNAME=${{ secrets.DB_USER }}|" .env
            sed -i "s|DB_PASSWORD=.*|DB_PASSWORD=${{ secrets.DB_PASSWORD }}|" .env
            php artisan key:generate
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            chmod -R 775 storage bootstrap/cache
            chmod 644 .env
            chown -R grandslo:grandslo .
            if [ -f artisan ]; then
              php artisan migrate --force
            fi
          EOF